DIGEST 03f3b7ff33eac92543a7adb244b50b38
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
binder 994:994 <> n:1
binder 996:996 <> m:2
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n:1 var
R1012:1012 LF.Tactics <> m:2 var
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n:1 var
R1023:1023 LF.Tactics <> m:2 var
prf 1508:1513 <> silly2
R1535:1537 Coq.Init.Datatypes <> nat ind
binder 1525:1525 <> n:3
binder 1527:1527 <> m:4
binder 1529:1529 <> o:5
binder 1531:1531 <> p:6
R1548:1553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1544:1546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1543:1543 LF.Tactics <> n:3 var
R1547:1547 LF.Tactics <> m:4 var
R1554:1554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1577:1583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1560:1563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1556:1558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1555:1555 LF.Tactics <> n:3 var
R1559:1559 LF.Tactics <> m:4 var
R1569:1571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1564:1564 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1566:1566 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1568:1568 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1565:1565 LF.Tactics <> n:3 var
R1567:1567 LF.Tactics <> o:5 var
R1572:1572 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1574:1574 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1576:1576 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1573:1573 LF.Tactics <> m:4 var
R1575:1575 LF.Tactics <> p:6 var
R1589:1591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1584:1584 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1586:1586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1588:1588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1585:1585 LF.Tactics <> n:3 var
R1587:1587 LF.Tactics <> o:5 var
R1592:1592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1594:1594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1593:1593 LF.Tactics <> m:4 var
R1595:1595 LF.Tactics <> p:6 var
prf 2126:2132 <> silly2a
R2150:2152 Coq.Init.Datatypes <> nat ind
binder 2144:2144 <> n:7
binder 2146:2146 <> m:8
R2171:2177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2163:2165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2158:2158 LF.Poly <> :::'('_x_','_x_')' not
R2160:2160 LF.Poly <> :::'('_x_','_x_')' not
R2162:2162 LF.Poly <> :::'('_x_','_x_')' not
R2159:2159 LF.Tactics <> n:7 var
R2161:2161 LF.Tactics <> n:7 var
R2166:2166 LF.Poly <> :::'('_x_','_x_')' not
R2168:2168 LF.Poly <> :::'('_x_','_x_')' not
R2170:2170 LF.Poly <> :::'('_x_','_x_')' not
R2167:2167 LF.Tactics <> m:8 var
R2169:2169 LF.Tactics <> m:8 var
R2178:2178 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2225:2231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2193:2195 Coq.Init.Datatypes <> nat ind
binder 2187:2187 <> q:9
binder 2189:2189 <> r:10
R2212:2215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2204:2206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2199:2199 LF.Poly <> :::'('_x_','_x_')' not
R2201:2201 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Poly <> :::'('_x_','_x_')' not
R2200:2200 LF.Tactics <> q:9 var
R2202:2202 LF.Tactics <> q:9 var
R2207:2207 LF.Poly <> :::'('_x_','_x_')' not
R2209:2209 LF.Poly <> :::'('_x_','_x_')' not
R2211:2211 LF.Poly <> :::'('_x_','_x_')' not
R2208:2208 LF.Tactics <> r:10 var
R2210:2210 LF.Tactics <> r:10 var
R2219:2221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2216:2216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2218:2218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2217:2217 LF.Tactics <> q:9 var
R2222:2222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2224:2224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2223:2223 LF.Tactics <> r:10 var
R2235:2237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2232:2232 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2234:2234 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2233:2233 LF.Tactics <> n:7 var
R2238:2238 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2240:2240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2239:2239 LF.Tactics <> m:8 var
prf 2439:2446 <> silly_ex
binder 2457:2457 <> p:11
R2462:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2508:2514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2470:2470 <> n:12
R2486:2489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2479:2481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2473:2476 LF.Basics <> even def
R2478:2478 LF.Tactics <> n:12 var
R2482:2485 LF.Basics <> true constr
R2500:2502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2490:2493 LF.Basics <> even def
R2496:2496 Coq.Init.Datatypes <> S constr
R2498:2498 LF.Tactics <> n:12 var
R2503:2507 LF.Basics <> false constr
R2515:2515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2556:2562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2523:2523 <> n:13
R2540:2543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2532:2534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2531:2531 LF.Tactics <> n:13 var
R2535:2539 LF.Basics <> false constr
R2549:2551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2544:2546 LF.Basics <> odd def
R2548:2548 LF.Tactics <> n:13 var
R2552:2555 LF.Basics <> true constr
R2576:2581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2569:2571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2563:2566 LF.Basics <> even def
R2568:2568 LF.Tactics <> p:11 var
R2572:2575 LF.Basics <> true constr
R2591:2593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2582:2584 LF.Basics <> odd def
R2587:2587 Coq.Init.Datatypes <> S constr
R2589:2589 LF.Tactics <> p:11 var
R2594:2597 LF.Basics <> true constr
prf 2870:2875 <> silly3
R2893:2895 Coq.Init.Datatypes <> nat ind
binder 2887:2887 <> n:14
binder 2889:2889 <> m:15
R2906:2911 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2902:2904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2901:2901 LF.Tactics <> n:14 var
R2905:2905 LF.Tactics <> m:15 var
R2913:2915 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2912:2912 LF.Tactics <> m:15 var
R2916:2916 LF.Tactics <> n:14 var
prf 3625:3637 <> rev_exercise1
R3656:3659 LF.Poly <> list ind
R3661:3663 Coq.Init.Datatypes <> nat ind
binder 3649:3649 <> l:16
binder 3651:3652 <> l':17
R3679:3684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3670:3672 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3669:3669 LF.Tactics <> l:16 var
R3673:3675 LF.Poly <> rev def
R3677:3678 LF.Tactics <> l':17 var
R3687:3689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3685:3686 LF.Tactics <> l':17 var
R3690:3692 LF.Poly <> rev def
R3694:3694 LF.Tactics <> l:16 var
def 4201:4216 <> trans_eq_example
R4242:4244 Coq.Init.Datatypes <> nat ind
binder 4228:4228 <> a:18
binder 4230:4230 <> b:19
binder 4232:4232 <> c:20
binder 4234:4234 <> d:21
binder 4236:4236 <> e:22
binder 4238:4238 <> f:23
R4266:4274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4258:4260 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4253:4253 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4255:4255 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4257:4257 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4254:4254 LF.Tactics <> a:18 var
R4256:4256 LF.Tactics <> b:19 var
R4261:4261 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4263:4263 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4265:4265 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4262:4262 LF.Tactics <> c:20 var
R4264:4264 LF.Tactics <> d:21 var
R4288:4296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4280:4282 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4275:4275 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4277:4277 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4279:4279 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4276:4276 LF.Tactics <> c:20 var
R4278:4278 LF.Tactics <> d:21 var
R4283:4283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4285:4285 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4287:4287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4284:4284 LF.Tactics <> e:22 var
R4286:4286 LF.Tactics <> f:23 var
R4302:4304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4297:4297 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4299:4299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4301:4301 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4298:4298 LF.Tactics <> a:18 var
R4300:4300 LF.Tactics <> b:19 var
R4305:4305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4307:4307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4309:4309 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4306:4306 LF.Tactics <> e:22 var
R4308:4308 LF.Tactics <> f:23 var
prf 4569:4576 <> trans_eq
binder 4588:4588 <> X:24
R4605:4605 LF.Tactics <> X:24 var
binder 4597:4597 <> n:25
binder 4599:4599 <> m:26
binder 4601:4601 <> o:27
R4616:4619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4612:4614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4611:4611 LF.Tactics <> n:25 var
R4615:4615 LF.Tactics <> m:26 var
R4625:4628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4621:4623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4620:4620 LF.Tactics <> m:26 var
R4624:4624 LF.Tactics <> o:27 var
R4630:4632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4629:4629 LF.Tactics <> n:25 var
R4633:4633 LF.Tactics <> o:27 var
def 4888:4904 <> trans_eq_example'
R4930:4932 Coq.Init.Datatypes <> nat ind
binder 4916:4916 <> a:28
binder 4918:4918 <> b:29
binder 4920:4920 <> c:30
binder 4922:4922 <> d:31
binder 4924:4924 <> e:32
binder 4926:4926 <> f:33
R4954:4962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4946:4948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4941:4941 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4943:4943 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4945:4945 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4942:4942 LF.Tactics <> a:28 var
R4944:4944 LF.Tactics <> b:29 var
R4949:4949 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4951:4951 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4953:4953 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4950:4950 LF.Tactics <> c:30 var
R4952:4952 LF.Tactics <> d:31 var
R4976:4984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4968:4970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4963:4963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4965:4965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4967:4967 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4964:4964 LF.Tactics <> c:30 var
R4966:4966 LF.Tactics <> d:31 var
R4971:4971 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4973:4973 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4975:4975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4972:4972 LF.Tactics <> e:32 var
R4974:4974 LF.Tactics <> f:33 var
R4990:4992 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4985:4985 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4987:4987 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4989:4989 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4986:4986 LF.Tactics <> a:28 var
R4988:4988 LF.Tactics <> b:29 var
R4993:4993 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4995:4995 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4997:4997 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4994:4994 LF.Tactics <> e:32 var
R4996:4996 LF.Tactics <> f:33 var
R5470:5470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5472:5472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5474:5474 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5452:5459 LF.Tactics <> trans_eq thm
R5470:5470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5472:5472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5474:5474 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5452:5459 LF.Tactics <> trans_eq thm
def 5954:5971 <> trans_eq_example''
R5997:5999 Coq.Init.Datatypes <> nat ind
binder 5983:5983 <> a:34
binder 5985:5985 <> b:35
binder 5987:5987 <> c:36
binder 5989:5989 <> d:37
binder 5991:5991 <> e:38
binder 5993:5993 <> f:39
R6021:6029 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6013:6015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6008:6008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6010:6010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6012:6012 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6009:6009 LF.Tactics <> a:34 var
R6011:6011 LF.Tactics <> b:35 var
R6016:6016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6018:6018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6020:6020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6017:6017 LF.Tactics <> c:36 var
R6019:6019 LF.Tactics <> d:37 var
R6043:6051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6035:6037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6030:6030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6032:6032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6034:6034 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6031:6031 LF.Tactics <> c:36 var
R6033:6033 LF.Tactics <> d:37 var
R6038:6038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6040:6040 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6042:6042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6039:6039 LF.Tactics <> e:38 var
R6041:6041 LF.Tactics <> f:39 var
R6057:6059 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6052:6052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6054:6054 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6056:6056 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6053:6053 LF.Tactics <> a:34 var
R6055:6055 LF.Tactics <> b:35 var
R6060:6060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6062:6062 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6064:6064 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6061:6061 LF.Tactics <> e:38 var
R6063:6063 LF.Tactics <> f:39 var
R6119:6119 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6121:6121 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6123:6123 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6119:6119 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6121:6121 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6123:6123 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6236:6252 <> trans_eq_exercise
R6274:6276 Coq.Init.Datatypes <> nat ind
binder 6264:6264 <> n:40
binder 6266:6266 <> m:41
binder 6268:6268 <> o:42
binder 6270:6270 <> p:43
R6301:6309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6286:6289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6300:6300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6285:6285 LF.Tactics <> m:41 var
R6290:6297 LF.Basics <> minustwo def
R6299:6299 LF.Tactics <> o:42 var
R6321:6329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6310:6310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6316:6319 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6312:6314 LF.Basics <> ::nat_scope:x_'+'_x not
R6311:6311 LF.Tactics <> n:40 var
R6315:6315 LF.Tactics <> p:43 var
R6320:6320 LF.Tactics <> m:41 var
R6330:6330 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6336:6340 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6351:6351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6332:6334 LF.Basics <> ::nat_scope:x_'+'_x not
R6331:6331 LF.Tactics <> n:40 var
R6335:6335 LF.Tactics <> p:43 var
R6341:6348 LF.Basics <> minustwo def
R6350:6350 LF.Tactics <> o:42 var
prf 7707:7717 <> S_injective
R7735:7737 Coq.Init.Datatypes <> nat ind
binder 7729:7729 <> n:44
binder 7731:7731 <> m:45
R7752:7757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7746:7748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7743:7743 Coq.Init.Datatypes <> S constr
R7745:7745 LF.Tactics <> n:44 var
R7749:7749 Coq.Init.Datatypes <> S constr
R7751:7751 LF.Tactics <> m:45 var
R7759:7761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7758:7758 LF.Tactics <> n:44 var
R7762:7762 LF.Tactics <> m:45 var
R7804:7806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7807:7810 Coq.Init.Peano <> pred syndef
R7813:7813 Coq.Init.Datatypes <> S constr
R7804:7806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7807:7810 Coq.Init.Peano <> pred syndef
R7813:7813 Coq.Init.Datatypes <> S constr
prf 8302:8313 <> S_injective'
R8331:8333 Coq.Init.Datatypes <> nat ind
binder 8325:8325 <> n:46
binder 8327:8327 <> m:47
R8348:8353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8342:8344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8339:8339 Coq.Init.Datatypes <> S constr
R8341:8341 LF.Tactics <> n:46 var
R8345:8345 Coq.Init.Datatypes <> S constr
R8347:8347 LF.Tactics <> m:47 var
R8355:8357 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8354:8354 LF.Tactics <> n:46 var
R8358:8358 LF.Tactics <> m:47 var
prf 8869:8881 <> injection_ex1
R8901:8903 Coq.Init.Datatypes <> nat ind
binder 8893:8893 <> n:48
binder 8895:8895 <> m:49
binder 8897:8897 <> o:50
R8922:8927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8914:8916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8909:8909 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8911:8911 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8913:8913 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8910:8910 LF.Tactics <> n:48 var
R8912:8912 LF.Tactics <> m:49 var
R8917:8917 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8919:8919 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8921:8921 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8918:8918 LF.Tactics <> o:50 var
R8920:8920 LF.Tactics <> o:50 var
R8929:8931 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8928:8928 LF.Tactics <> n:48 var
R8932:8932 LF.Tactics <> m:49 var
def 9117:9129 <> injection_ex3
binder 9141:9141 <> X:51
R9160:9160 LF.Tactics <> X:51 var
binder 9152:9152 <> x:52
binder 9154:9154 <> y:53
binder 9156:9156 <> z:54
R9170:9173 LF.Poly <> list ind
R9175:9175 LF.Tactics <> X:51 var
binder 9164:9164 <> l:55
binder 9166:9166 <> j:56
R9201:9206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9192:9194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9182:9185 LF.Poly <> :::x_'::'_x not
R9181:9181 LF.Tactics <> x:52 var
R9187:9190 LF.Poly <> :::x_'::'_x not
R9186:9186 LF.Tactics <> y:53 var
R9191:9191 LF.Tactics <> l:55 var
R9196:9199 LF.Poly <> :::x_'::'_x not
R9195:9195 LF.Tactics <> z:54 var
R9200:9200 LF.Tactics <> j:56 var
R9217:9222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9208:9210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9207:9207 LF.Tactics <> j:56 var
R9212:9215 LF.Poly <> :::x_'::'_x not
R9211:9211 LF.Tactics <> z:54 var
R9216:9216 LF.Tactics <> l:55 var
R9224:9226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9223:9223 LF.Tactics <> x:52 var
R9227:9227 LF.Tactics <> y:53 var
prf 9972:9987 <> discriminate_ex1
R10005:10007 Coq.Init.Datatypes <> nat ind
binder 9999:9999 <> n:57
binder 10001:10001 <> m:58
R10025:10030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10018:10020 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10013:10017 LF.Basics <> false constr
R10021:10024 LF.Basics <> true constr
R10032:10034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10031:10031 LF.Tactics <> n:57 var
R10035:10035 LF.Tactics <> m:58 var
prf 10101:10116 <> discriminate_ex2
R10132:10134 Coq.Init.Datatypes <> nat ind
binder 10128:10128 <> n:59
R10147:10152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10143:10145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10140:10140 Coq.Init.Datatypes <> S constr
R10142:10142 LF.Tactics <> n:59 var
R10146:10146 Coq.Init.Datatypes <> O constr
R10158:10160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10154:10156 LF.Basics <> ::nat_scope:x_'+'_x not
def 10981:10996 <> discriminate_ex3
binder 11010:11010 <> X:60
R11029:11029 LF.Tactics <> X:60 var
binder 11021:11021 <> x:61
binder 11023:11023 <> y:62
binder 11025:11025 <> z:63
R11039:11042 LF.Poly <> list ind
R11044:11044 LF.Tactics <> X:60 var
binder 11033:11033 <> l:64
binder 11035:11035 <> j:65
R11068:11075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11063:11065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11053:11056 LF.Poly <> :::x_'::'_x not
R11052:11052 LF.Tactics <> x:61 var
R11058:11061 LF.Poly <> :::x_'::'_x not
R11057:11057 LF.Tactics <> y:62 var
R11062:11062 LF.Tactics <> l:64 var
R11066:11067 LF.Poly <> :::'['_']' not
R11077:11079 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11076:11076 LF.Tactics <> x:61 var
R11080:11080 LF.Tactics <> z:63 var
prf 11321:11327 <> eqb_0_l
binder 11338:11338 <> n:66
R11357:11360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11350:11352 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11345:11348 LF.Basics <> ::nat_scope:x_'=?'_x not
R11349:11349 LF.Tactics <> n:66 var
R11353:11356 LF.Basics <> true constr
R11362:11364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11361:11361 LF.Tactics <> n:66 var
prf 12263:12269 <> f_equal
binder 12281:12281 <> A:67
binder 12283:12283 <> B:68
R12298:12301 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12297:12297 LF.Tactics <> A:67 var
R12302:12302 LF.Tactics <> B:68 var
binder 12294:12294 <> f:69
R12311:12311 LF.Tactics <> A:67 var
binder 12306:12306 <> x:70
binder 12308:12308 <> y:71
R12322:12325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12318:12320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12317:12317 LF.Tactics <> x:70 var
R12321:12321 LF.Tactics <> y:71 var
R12329:12331 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12326:12326 LF.Tactics <> f:69 var
R12328:12328 LF.Tactics <> x:70 var
R12332:12332 LF.Tactics <> f:69 var
R12334:12334 LF.Tactics <> y:71 var
prf 12406:12426 <> eq_implies_succ_equal
R12444:12446 Coq.Init.Datatypes <> nat ind
binder 12438:12438 <> n:72
binder 12440:12440 <> m:73
R12457:12460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12453:12455 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12452:12452 LF.Tactics <> n:72 var
R12456:12456 LF.Tactics <> m:73 var
R12464:12466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12461:12461 Coq.Init.Datatypes <> S constr
R12463:12463 LF.Tactics <> n:72 var
R12467:12467 Coq.Init.Datatypes <> S constr
R12469:12469 LF.Tactics <> m:73 var
R12499:12505 LF.Tactics <> f_equal thm
R12499:12505 LF.Tactics <> f_equal thm
prf 12930:12951 <> eq_implies_succ_equal'
R12969:12971 Coq.Init.Datatypes <> nat ind
binder 12963:12963 <> n:74
binder 12965:12965 <> m:75
R12982:12985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12978:12980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12977:12977 LF.Tactics <> n:74 var
R12981:12981 LF.Tactics <> m:75 var
R12989:12991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12986:12986 Coq.Init.Datatypes <> S constr
R12988:12988 LF.Tactics <> n:74 var
R12992:12992 Coq.Init.Datatypes <> S constr
R12994:12994 LF.Tactics <> m:75 var
prf 13477:13481 <> S_inj
R13499:13501 Coq.Init.Datatypes <> nat ind
binder 13493:13493 <> n:76
binder 13495:13495 <> m:77
R13509:13512 LF.Basics <> bool ind
binder 13505:13505 <> b:78
R13538:13544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13518:13518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13533:13536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13519:13519 LF.Basics <> ::nat_scope:x_'=?'_x not
R13523:13528 LF.Basics <> ::nat_scope:x_'=?'_x not
R13532:13532 LF.Basics <> ::nat_scope:x_'=?'_x not
R13520:13520 Coq.Init.Datatypes <> S constr
R13522:13522 LF.Tactics <> n:76 var
R13529:13529 Coq.Init.Datatypes <> S constr
R13531:13531 LF.Tactics <> m:77 var
R13537:13537 LF.Tactics <> b:78 var
R13545:13545 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13552:13555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13547:13550 LF.Basics <> ::nat_scope:x_'=?'_x not
R13546:13546 LF.Tactics <> n:76 var
R13551:13551 LF.Tactics <> m:77 var
R13556:13556 LF.Tactics <> b:78 var
prf 14387:14392 <> silly4
R14414:14416 Coq.Init.Datatypes <> nat ind
binder 14404:14404 <> n:79
binder 14406:14406 <> m:80
binder 14408:14408 <> p:81
binder 14410:14410 <> q:82
R14422:14422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14437:14443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14428:14431 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14424:14426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14423:14423 LF.Tactics <> n:79 var
R14427:14427 LF.Tactics <> m:80 var
R14433:14435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14432:14432 LF.Tactics <> p:81 var
R14436:14436 LF.Tactics <> q:82 var
R14449:14454 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14445:14447 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14444:14444 LF.Tactics <> m:80 var
R14448:14448 LF.Tactics <> n:79 var
R14456:14458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14455:14455 LF.Tactics <> q:82 var
R14459:14459 LF.Tactics <> p:81 var
prf 16086:16108 <> double_injective_FAILED
binder 16119:16119 <> n:83
binder 16121:16121 <> m:84
R16145:16150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16134:16136 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16126:16131 LF.Induction <> double def
R16133:16133 LF.Tactics <> n:83 var
R16137:16142 LF.Induction <> double def
R16144:16144 LF.Tactics <> m:84 var
R16152:16154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16151:16151 LF.Tactics <> n:83 var
R16155:16155 LF.Tactics <> m:84 var
R16458:16464 LF.Tactics <> f_equal thm
R16458:16464 LF.Tactics <> f_equal thm
prf 18808:18823 <> double_injective
binder 18834:18834 <> n:85
binder 18836:18836 <> m:86
R18860:18865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18849:18851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18841:18846 LF.Induction <> double def
R18848:18848 LF.Tactics <> n:85 var
R18852:18857 LF.Induction <> double def
R18859:18859 LF.Tactics <> m:86 var
R18867:18869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18866:18866 LF.Tactics <> n:85 var
R18870:18870 LF.Tactics <> m:86 var
R19754:19760 LF.Tactics <> f_equal thm
R19754:19760 LF.Tactics <> f_equal thm
prf 20793:20800 <> eqb_true
binder 20811:20811 <> n:87
binder 20813:20813 <> m:88
R20831:20834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20824:20826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20819:20822 LF.Basics <> ::nat_scope:x_'=?'_x not
R20818:20818 LF.Tactics <> n:87 var
R20823:20823 LF.Tactics <> m:88 var
R20827:20830 LF.Basics <> true constr
R20836:20838 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20835:20835 LF.Tactics <> n:87 var
R20839:20839 LF.Tactics <> m:88 var
def 21126:21156 <> manual_grade_for_informal_proof
R21160:21165 Coq.Init.Datatypes <> option ind
R21171:21171 LF.Poly <> ::type_scope:x_'*'_x not
R21168:21170 Coq.Init.Datatypes <> nat ind
R21172:21177 Coq.Strings.String <> string ind
R21183:21186 Coq.Init.Datatypes <> None constr
prf 21424:21441 <> plus_n_n_injective
binder 21452:21452 <> n:89
binder 21454:21454 <> m:90
R21472:21477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21464:21466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21460:21462 LF.Basics <> ::nat_scope:x_'+'_x not
R21459:21459 LF.Tactics <> n:89 var
R21463:21463 LF.Tactics <> n:89 var
R21468:21470 LF.Basics <> ::nat_scope:x_'+'_x not
R21467:21467 LF.Tactics <> m:90 var
R21471:21471 LF.Tactics <> m:90 var
R21479:21481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21478:21478 LF.Tactics <> n:89 var
R21482:21482 LF.Tactics <> m:90 var
prf 21852:21880 <> double_injective_take2_FAILED
binder 21891:21891 <> n:91
binder 21893:21893 <> m:92
R21917:21922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21906:21908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21898:21903 LF.Induction <> double def
R21905:21905 LF.Tactics <> n:91 var
R21909:21914 LF.Induction <> double def
R21916:21916 LF.Tactics <> m:92 var
R21924:21926 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21923:21923 LF.Tactics <> n:91 var
R21927:21927 LF.Tactics <> m:92 var
R22230:22236 LF.Tactics <> f_equal thm
R22230:22236 LF.Tactics <> f_equal thm
prf 23177:23198 <> double_injective_take2
binder 23209:23209 <> n:93
binder 23211:23211 <> m:94
R23235:23240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23224:23226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23216:23221 LF.Induction <> double def
R23223:23223 LF.Tactics <> n:93 var
R23227:23232 LF.Induction <> double def
R23234:23234 LF.Tactics <> m:94 var
R23242:23244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23241:23241 LF.Tactics <> n:93 var
R23245:23245 LF.Tactics <> m:94 var
R23731:23737 LF.Tactics <> f_equal thm
R23731:23737 LF.Tactics <> f_equal thm
prf 25863:25882 <> nth_error_after_last
R25897:25899 Coq.Init.Datatypes <> nat ind
binder 25893:25893 <> n:95
binder 25903:25903 <> X:96
R25918:25921 LF.Poly <> list ind
R25923:25923 LF.Tactics <> X:96 var
binder 25914:25914 <> l:97
R25941:25946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25937:25939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25929:25934 LF.Poly <> length def
R25936:25936 LF.Tactics <> l:97 var
R25940:25940 LF.Tactics <> n:95 var
R25960:25962 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25947:25955 LF.Poly <> nth_error def
R25959:25959 LF.Tactics <> n:95 var
R25957:25957 LF.Tactics <> l:97 var
R25963:25966 Coq.Init.Datatypes <> None constr
def 26335:26340 <> square
binder 26342:26342 <> n:98
R26348:26350 LF.Basics <> ::nat_scope:x_'*'_x not
R26347:26347 LF.Tactics <> n:98 var
R26351:26351 LF.Tactics <> n:98 var
prf 26422:26432 <> square_mult
binder 26443:26443 <> n:99
binder 26445:26445 <> m:100
R26462:26464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26448:26453 LF.Tactics <> square def
R26457:26459 LF.Basics <> ::nat_scope:x_'*'_x not
R26456:26456 LF.Tactics <> n:99 var
R26460:26460 LF.Tactics <> m:100 var
R26473:26475 LF.Basics <> ::nat_scope:x_'*'_x not
R26465:26470 LF.Tactics <> square def
R26472:26472 LF.Tactics <> n:99 var
R26476:26481 LF.Tactics <> square def
R26483:26483 LF.Tactics <> m:100 var
R26798:26803 LF.Tactics <> square def
R27122:27131 LF.Induction <> mult_assoc thm
R27122:27131 LF.Induction <> mult_assoc thm
R27122:27131 LF.Induction <> mult_assoc thm
R27157:27159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27153:27155 LF.Basics <> ::nat_scope:x_'*'_x not
R27149:27151 LF.Basics <> ::nat_scope:x_'*'_x not
R27165:27167 LF.Basics <> ::nat_scope:x_'*'_x not
R27161:27163 LF.Basics <> ::nat_scope:x_'*'_x not
R27157:27159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27153:27155 LF.Basics <> ::nat_scope:x_'*'_x not
R27149:27151 LF.Basics <> ::nat_scope:x_'*'_x not
R27165:27167 LF.Basics <> ::nat_scope:x_'*'_x not
R27161:27163 LF.Basics <> ::nat_scope:x_'*'_x not
R27186:27193 LF.Induction <> mul_comm thm
R27186:27193 LF.Induction <> mul_comm thm
R27186:27193 LF.Induction <> mul_comm thm
R27202:27211 LF.Induction <> mult_assoc thm
R27202:27211 LF.Induction <> mult_assoc thm
R27237:27246 LF.Induction <> mult_assoc thm
R27237:27246 LF.Induction <> mult_assoc thm
R27237:27246 LF.Induction <> mult_assoc thm
def 27632:27634 <> foo
R27640:27642 Coq.Init.Datatypes <> nat ind
binder 27637:27637 <> x:101
prf 27864:27875 <> silly_fact_1
binder 27886:27886 <> m:102
R27898:27900 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27894:27896 LF.Basics <> ::nat_scope:x_'+'_x not
R27889:27891 LF.Tactics <> foo def
R27893:27893 LF.Tactics <> m:102 var
R27912:27914 LF.Basics <> ::nat_scope:x_'+'_x not
R27901:27903 LF.Tactics <> foo def
R27907:27909 LF.Basics <> ::nat_scope:x_'+'_x not
R27906:27906 LF.Tactics <> m:102 var
def 28142:28144 <> bar
binder 28146:28146 <> x:103
R28159:28159 LF.Tactics <> x:103 var
R28170:28170 Coq.Init.Datatypes <> O constr
R28181:28181 Coq.Init.Datatypes <> S constr
prf 28255:28273 <> silly_fact_2_FAILED
binder 28284:28284 <> m:105
R28296:28298 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28292:28294 LF.Basics <> ::nat_scope:x_'+'_x not
R28287:28289 LF.Tactics <> bar def
R28291:28291 LF.Tactics <> m:105 var
R28310:28312 LF.Basics <> ::nat_scope:x_'+'_x not
R28299:28301 LF.Tactics <> bar def
R28305:28307 LF.Basics <> ::nat_scope:x_'+'_x not
R28304:28304 LF.Tactics <> m:105 var
prf 29299:29310 <> silly_fact_2
binder 29321:29321 <> m:106
R29333:29335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29329:29331 LF.Basics <> ::nat_scope:x_'+'_x not
R29324:29326 LF.Tactics <> bar def
R29328:29328 LF.Tactics <> m:106 var
R29347:29349 LF.Basics <> ::nat_scope:x_'+'_x not
R29336:29338 LF.Tactics <> bar def
R29342:29344 LF.Basics <> ::nat_scope:x_'+'_x not
R29341:29341 LF.Tactics <> m:106 var
prf 29697:29709 <> silly_fact_2'
binder 29720:29720 <> m:107
R29732:29734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29728:29730 LF.Basics <> ::nat_scope:x_'+'_x not
R29723:29725 LF.Tactics <> bar def
R29727:29727 LF.Tactics <> m:107 var
R29746:29748 LF.Basics <> ::nat_scope:x_'+'_x not
R29735:29737 LF.Tactics <> bar def
R29741:29743 LF.Basics <> ::nat_scope:x_'+'_x not
R29740:29740 LF.Tactics <> m:107 var
R29780:29782 LF.Tactics <> bar def
def 30428:30435 <> sillyfun
R30442:30444 Coq.Init.Datatypes <> nat ind
binder 30438:30438 <> n:108
R30449:30452 LF.Basics <> bool ind
R30463:30466 LF.Basics <> ::nat_scope:x_'=?'_x not
R30462:30462 LF.Tactics <> n:108 var
R30491:30494 LF.Basics <> ::nat_scope:x_'=?'_x not
R30490:30490 LF.Tactics <> n:108 var
R30515:30519 LF.Basics <> false constr
R30502:30506 LF.Basics <> false constr
R30474:30478 LF.Basics <> false constr
prf 30531:30544 <> sillyfun_false
R30560:30562 Coq.Init.Datatypes <> nat ind
binder 30556:30556 <> n:109
R30578:30580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30568:30575 LF.Tactics <> sillyfun def
R30577:30577 LF.Tactics <> n:109 var
R30581:30585 LF.Basics <> false constr
R30614:30621 LF.Tactics <> sillyfun def
R30637:30640 LF.Basics <> ::nat_scope:x_'=?'_x not
R30637:30640 LF.Basics <> ::nat_scope:x_'=?'_x not
R30729:30732 LF.Basics <> ::nat_scope:x_'=?'_x not
R30729:30732 LF.Basics <> ::nat_scope:x_'=?'_x not
def 31605:31609 <> split
binder 31612:31612 <> X:110
binder 31614:31614 <> Y:111
R31629:31632 LF.Poly <> list ind
R31636:31636 LF.Poly <> ::type_scope:x_'*'_x not
R31635:31635 LF.Tactics <> X:110 var
R31637:31637 LF.Tactics <> Y:111 var
binder 31625:31625 <> l:112
R31658:31658 LF.Poly <> ::type_scope:x_'*'_x not
R31665:31669 LF.Poly <> ::type_scope:x_'*'_x not
R31676:31676 LF.Poly <> ::type_scope:x_'*'_x not
R31659:31662 LF.Poly <> list ind
R31664:31664 LF.Tactics <> X:110 var
R31670:31673 LF.Poly <> list ind
R31675:31675 LF.Tactics <> Y:111 var
R31689:31689 LF.Tactics <> l:112 var
R31700:31701 LF.Poly <> :::'['_']' not
R31706:31706 LF.Poly <> :::'('_x_','_x_')' not
R31709:31710 LF.Poly <> :::'('_x_','_x_')' not
R31713:31713 LF.Poly <> :::'('_x_','_x_')' not
R31707:31708 LF.Poly <> :::'['_']' not
R31711:31712 LF.Poly <> :::'['_']' not
R31725:31728 LF.Poly <> :::x_'::'_x not
R31719:31719 LF.Poly <> :::'('_x_','_x_')' not
R31721:31722 LF.Poly <> :::'('_x_','_x_')' not
R31724:31724 LF.Poly <> :::'('_x_','_x_')' not
R31746:31750 LF.Tactics <> split:113 def
R31767:31767 LF.Poly <> :::'('_x_','_x_')' not
R31770:31771 LF.Poly <> :::'('_x_','_x_')' not
R31774:31774 LF.Poly <> :::'('_x_','_x_')' not
R31779:31779 LF.Poly <> :::'('_x_','_x_')' not
R31787:31788 LF.Poly <> :::'('_x_','_x_')' not
R31796:31796 LF.Poly <> :::'('_x_','_x_')' not
R31781:31784 LF.Poly <> :::x_'::'_x not
R31790:31793 LF.Poly <> :::x_'::'_x not
prf 31906:31918 <> combine_split
binder 31929:31929 <> X:115
binder 31931:31931 <> Y:116
R31938:31941 LF.Poly <> list ind
R31945:31947 LF.Poly <> ::type_scope:x_'*'_x not
R31944:31944 LF.Tactics <> X:115 var
R31948:31948 LF.Tactics <> Y:116 var
binder 31934:31934 <> l:117
binder 31952:31953 <> l1:118
binder 31955:31956 <> l2:119
R31979:31984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31968:31970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31961:31965 LF.Tactics <> split def
R31967:31967 LF.Tactics <> l:117 var
R31971:31971 LF.Poly <> :::'('_x_','_x_')' not
R31974:31975 LF.Poly <> :::'('_x_','_x_')' not
R31978:31978 LF.Poly <> :::'('_x_','_x_')' not
R31972:31973 LF.Tactics <> l1:118 var
R31976:31977 LF.Tactics <> l2:119 var
R31998:32000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31985:31991 LF.Poly <> combine def
R31996:31997 LF.Tactics <> l2:119 var
R31993:31994 LF.Tactics <> l1:118 var
R32001:32001 LF.Tactics <> l:117 var
def 32550:32558 <> sillyfun1
R32565:32567 Coq.Init.Datatypes <> nat ind
binder 32561:32561 <> n:120
R32572:32575 LF.Basics <> bool ind
R32586:32589 LF.Basics <> ::nat_scope:x_'=?'_x not
R32585:32585 LF.Tactics <> n:120 var
R32613:32616 LF.Basics <> ::nat_scope:x_'=?'_x not
R32612:32612 LF.Tactics <> n:120 var
R32636:32640 LF.Basics <> false constr
R32624:32627 LF.Basics <> true constr
R32597:32600 LF.Basics <> true constr
prf 32835:32854 <> sillyfun1_odd_FAILED
R32870:32872 Coq.Init.Datatypes <> nat ind
binder 32866:32866 <> n:121
R32896:32901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32889:32891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32878:32886 LF.Tactics <> sillyfun1 def
R32888:32888 LF.Tactics <> n:121 var
R32892:32895 LF.Basics <> true constr
R32907:32909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32902:32904 LF.Basics <> odd def
R32906:32906 LF.Tactics <> n:121 var
R32910:32913 LF.Basics <> true constr
R32945:32953 LF.Tactics <> sillyfun1 def
R32975:32978 LF.Basics <> ::nat_scope:x_'=?'_x not
R32975:32978 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 33780:33792 <> sillyfun1_odd
R33808:33810 Coq.Init.Datatypes <> nat ind
binder 33804:33804 <> n:122
R33834:33839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33827:33829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33816:33824 LF.Tactics <> sillyfun1 def
R33826:33826 LF.Tactics <> n:122 var
R33830:33833 LF.Basics <> true constr
R33845:33847 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33840:33842 LF.Basics <> odd def
R33844:33844 LF.Tactics <> n:122 var
R33848:33851 LF.Basics <> true constr
R33883:33891 LF.Tactics <> sillyfun1 def
R33913:33916 LF.Basics <> ::nat_scope:x_'=?'_x not
R33913:33916 LF.Basics <> ::nat_scope:x_'=?'_x not
R34163:34170 LF.Tactics <> eqb_true prfax
R34163:34170 LF.Tactics <> eqb_true prfax
R34462:34465 LF.Basics <> ::nat_scope:x_'=?'_x not
R34462:34465 LF.Basics <> ::nat_scope:x_'=?'_x not
R34522:34529 LF.Tactics <> eqb_true prfax
R34522:34529 LF.Tactics <> eqb_true prfax
prf 34705:34726 <> bool_fn_applied_thrice
R34748:34751 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34744:34747 LF.Basics <> bool ind
R34752:34755 LF.Basics <> bool ind
binder 34740:34740 <> f:123
R34763:34766 LF.Basics <> bool ind
binder 34759:34759 <> b:124
R34783:34785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34772:34772 LF.Tactics <> f:123 var
R34775:34775 LF.Tactics <> f:123 var
R34778:34778 LF.Tactics <> f:123 var
R34780:34780 LF.Tactics <> b:124 var
R34786:34786 LF.Tactics <> f:123 var
R34788:34788 LF.Tactics <> b:124 var
prf 37438:37444 <> eqb_sym
R37462:37464 Coq.Init.Datatypes <> nat ind
binder 37456:37456 <> n:125
binder 37458:37458 <> m:126
R37470:37470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37477:37481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37488:37488 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37472:37475 LF.Basics <> ::nat_scope:x_'=?'_x not
R37471:37471 LF.Tactics <> n:125 var
R37476:37476 LF.Tactics <> m:126 var
R37483:37486 LF.Basics <> ::nat_scope:x_'=?'_x not
R37482:37482 LF.Tactics <> m:126 var
R37487:37487 LF.Tactics <> n:125 var
prf 37872:37880 <> eqb_trans
binder 37891:37891 <> n:127
binder 37893:37893 <> m:128
binder 37895:37895 <> p:129
R37913:37918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37906:37908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37901:37904 LF.Basics <> ::nat_scope:x_'=?'_x not
R37900:37900 LF.Tactics <> n:127 var
R37905:37905 LF.Tactics <> m:128 var
R37909:37912 LF.Basics <> true constr
R37932:37937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37925:37927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37920:37923 LF.Basics <> ::nat_scope:x_'=?'_x not
R37919:37919 LF.Tactics <> m:128 var
R37924:37924 LF.Tactics <> p:129 var
R37928:37931 LF.Basics <> true constr
R37944:37946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37939:37942 LF.Basics <> ::nat_scope:x_'=?'_x not
R37938:37938 LF.Tactics <> n:127 var
R37943:37943 LF.Tactics <> p:129 var
R37947:37950 LF.Basics <> true constr
def 38693:38715 <> split_combine_statement
prf 38889:38901 <> split_combine
R38905:38927 LF.Tactics <> split_combine_statement prfax
def 39018:39047 <> manual_grade_for_split_combine
R39051:39056 Coq.Init.Datatypes <> option ind
R39062:39062 LF.Poly <> ::type_scope:x_'*'_x not
R39059:39061 Coq.Init.Datatypes <> nat ind
R39063:39068 Coq.Strings.String <> string ind
R39074:39077 Coq.Init.Datatypes <> None constr
prf 39255:39269 <> filter_exercise
binder 39281:39281 <> X:130
R39300:39303 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39299:39299 LF.Tactics <> X:130 var
R39304:39307 LF.Basics <> bool ind
binder 39292:39295 <> test:131
R39348:39348 LF.Tactics <> X:130 var
binder 39344:39344 <> x:132
R39359:39362 LF.Poly <> list ind
R39364:39364 LF.Tactics <> X:130 var
binder 39352:39352 <> l:133
binder 39354:39355 <> lf:134
R39393:39398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39383:39385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39370:39375 LF.Poly <> filter def
R39382:39382 LF.Tactics <> l:133 var
R39377:39380 LF.Tactics <> test:131 var
R39387:39390 LF.Poly <> :::x_'::'_x not
R39386:39386 LF.Tactics <> x:132 var
R39391:39392 LF.Tactics <> lf:134 var
R39405:39407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39399:39402 LF.Tactics <> test:131 var
R39404:39404 LF.Tactics <> x:132 var
R39408:39411 LF.Basics <> true constr
def 40350:40356 <> forallb
binder 40359:40359 <> X:135
R40378:40381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40377:40377 LF.Tactics <> X:135 var
R40382:40385 LF.Basics <> bool ind
binder 40370:40373 <> test:136
R40393:40396 LF.Poly <> list ind
R40398:40398 LF.Tactics <> X:135 var
binder 40389:40389 <> l:137
R40403:40406 LF.Basics <> bool ind
def 40484:40497 <> test_forallb_1
R40524:40526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40501:40507 LF.Tactics <> forallb prfax
R40513:40513 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40515:40515 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40517:40517 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40519:40519 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40521:40521 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40523:40523 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40509:40511 LF.Basics <> odd def
R40527:40530 LF.Basics <> true constr
def 40578:40591 <> test_forallb_2
R40621:40623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40595:40601 LF.Tactics <> forallb prfax
R40608:40608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40614:40614 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40620:40620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40609:40613 LF.Basics <> false constr
R40615:40619 LF.Basics <> false constr
R40603:40606 LF.Basics <> negb def
R40624:40627 LF.Basics <> true constr
def 40675:40688 <> test_forallb_3
R40714:40716 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40692:40698 LF.Tactics <> forallb prfax
R40705:40705 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40707:40707 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40709:40709 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40711:40711 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40713:40713 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40700:40703 LF.Basics <> even def
R40717:40721 LF.Basics <> false constr
def 40769:40782 <> test_forallb_4
R40804:40806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40786:40792 LF.Tactics <> forallb prfax
R40802:40803 LF.Poly <> :::'['_']' not
R40795:40797 LF.Basics <> eqb def
R40807:40810 LF.Basics <> true constr
def 40859:40865 <> existsb
binder 40868:40868 <> X:139
R40887:40890 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40886:40886 LF.Tactics <> X:139 var
R40891:40894 LF.Basics <> bool ind
binder 40879:40882 <> test:140
R40902:40905 LF.Poly <> list ind
R40907:40907 LF.Tactics <> X:139 var
binder 40898:40898 <> l:141
R40912:40915 LF.Basics <> bool ind
def 40993:41006 <> test_existsb_1
R41035:41037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41010:41016 LF.Tactics <> existsb prfax
R41026:41026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41028:41028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41030:41030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41032:41032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41034:41034 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41019:41021 LF.Basics <> eqb def
R41038:41042 LF.Basics <> false constr
def 41090:41103 <> test_existsb_2
R41144:41146 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41107:41113 LF.Tactics <> existsb prfax
R41127:41127 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41132:41132 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41137:41137 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41143:41143 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41128:41131 LF.Basics <> true constr
R41133:41136 LF.Basics <> true constr
R41138:41142 LF.Basics <> false constr
R41116:41119 LF.Basics <> andb def
R41121:41124 LF.Basics <> true constr
R41147:41150 LF.Basics <> true constr
def 41198:41211 <> test_existsb_3
R41240:41242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41215:41221 LF.Tactics <> existsb prfax
R41227:41227 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41229:41229 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41231:41231 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41233:41233 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41235:41235 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41237:41237 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41239:41239 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41223:41225 LF.Basics <> odd def
R41243:41246 LF.Basics <> true constr
def 41294:41307 <> test_existsb_4
R41326:41328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41311:41317 LF.Tactics <> existsb prfax
R41324:41325 LF.Poly <> :::'['_']' not
R41319:41322 LF.Basics <> even def
R41329:41333 LF.Basics <> false constr
def 41384:41391 <> existsb'
binder 41394:41394 <> X:143
R41413:41416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41412:41412 LF.Tactics <> X:143 var
R41417:41420 LF.Basics <> bool ind
binder 41405:41408 <> test:144
R41428:41431 LF.Poly <> list ind
R41433:41433 LF.Tactics <> X:143 var
binder 41424:41424 <> l:145
R41438:41441 LF.Basics <> bool ind
prf 41519:41534 <> existsb_existsb'
binder 41546:41546 <> X:146
R41565:41568 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41564:41564 LF.Tactics <> X:146 var
R41569:41572 LF.Basics <> bool ind
binder 41557:41560 <> test:147
R41580:41583 LF.Poly <> list ind
R41585:41585 LF.Tactics <> X:146 var
binder 41576:41576 <> l:148
R41605:41607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41591:41597 LF.Tactics <> existsb prfax
R41604:41604 LF.Tactics <> l:148 var
R41599:41602 LF.Tactics <> test:147 var
R41608:41615 LF.Tactics <> existsb' prfax
R41622:41622 LF.Tactics <> l:148 var
R41617:41620 LF.Tactics <> test:147 var
